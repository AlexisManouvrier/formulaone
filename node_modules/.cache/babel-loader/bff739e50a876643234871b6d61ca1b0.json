{"ast":null,"code":"var _jsxFileName = \"/Users/ariz/Documents/github-simplon/formula-one/src/components/MainSlider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Slider from \"react-slick\";\nimport SliderData from \"./SliderData\";\nimport PopUp from \"./PopUp\"; // Import css files\n\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"../styles/css/main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MainSlider() {\n  _s();\n\n  const config = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 3,\n    slidesToScroll: 1\n  };\n  const [settings] = useState(config);\n\n  /*#__PURE__*/\n  _jsxDEV(SliderData, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n\n  const products = SliderData();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Slider, { ...settings,\n      children: products.map((x, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"img\",\n            src: x.img,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-title\",\n              children: x.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-text\",\n              children: x.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: togglePopup,\n              children: \"Read More\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), isOpen && /*#__PURE__*/_jsxDEV(PopUp, {\n              content: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"img\",\n                  src: x.img,\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"PopUp-Header\",\n                  children: x.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"PopUp-Text\",\n                  children: x.textDetail\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true),\n              handleClose: togglePopup\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainSlider, \"910WZScQ0QxWYBQ2NX9G6SlwW9Y=\");\n\n_c = MainSlider;\nexport default MainSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainSlider\");","map":{"version":3,"sources":["/Users/ariz/Documents/github-simplon/formula-one/src/components/MainSlider.js"],"names":["React","useState","Slider","SliderData","PopUp","MainSlider","config","dots","infinite","speed","slidesToShow","slidesToScroll","settings","products","isOpen","setIsOpen","togglePopup","map","x","i","img","title","text","textDetail"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAEA;;AACA,OAAO,gCAAP;AACA,OAAO,sCAAP;AACA,OAAO,wBAAP;;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAMC,MAAM,GAAG;AACbC,IAAAA,IAAI,EAAE,IADO;AAEbC,IAAAA,QAAQ,EAAE,IAFG;AAGbC,IAAAA,KAAK,EAAE,GAHM;AAIbC,IAAAA,YAAY,EAAE,CAJD;AAKbC,IAAAA,cAAc,EAAE;AALH,GAAf;AAQA,QAAM,CAACC,QAAD,IAAaX,QAAQ,CAACK,MAAD,CAA3B;;AAEA;AAAA,UAAC,UAAD;AAAA;AAAA;AAAA;AAAA;;AACA,QAAMO,QAAQ,GAAGV,UAAU,EAA3B;AAEA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMe,WAAW,GAAG,MAAM;AACxBD,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,MAAD,OAAYF,QAAZ;AAAA,gBACGC,QAAQ,CAACI,GAAT,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACtB,4BACE;AAAa,UAAA,SAAS,EAAC,UAAvB;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAqB,YAAA,GAAG,EAAED,CAAC,CAACE,GAA5B;AAAiC,YAAA,GAAG,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,KAAK,EAAC,WAAX;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,wBAA6BF,CAAC,CAACG;AAA/B;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,wBAA4BH,CAAC,CAACI;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAQ,cAAA,SAAS,EAAC,KAAlB;AAAwB,cAAA,OAAO,EAAEN,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,EAMGF,MAAM,iBACL,QAAC,KAAD;AACE,cAAA,OAAO,eACL;AAAA,wCACE;AAAK,kBAAA,SAAS,EAAC,KAAf;AAAqB,kBAAA,GAAG,EAAEI,CAAC,CAACE,GAA5B;AAAiC,kBAAA,GAAG,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAK,kBAAA,SAAS,EAAC,cAAf;AAAA,4BAA+BF,CAAC,CAACG;AAAjC;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AAAK,kBAAA,SAAS,EAAC,YAAf;AAAA,4BAA6BH,CAAC,CAACK;AAA/B;AAAA;AAAA;AAAA;AAAA,wBAHF;AAAA,8BAFJ;AAQE,cAAA,WAAW,EAAEP;AARf;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAUG,CAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAwBD,OAzBA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GApDQd,U;;KAAAA,U;AAsDT,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Slider from \"react-slick\";\n\nimport SliderData from \"./SliderData\";\nimport PopUp from \"./PopUp\";\n\n// Import css files\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"../styles/css/main.css\";\n\nfunction MainSlider() {\n  const config = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 3,\n    slidesToScroll: 1,\n  };\n\n  const [settings] = useState(config);\n\n  <SliderData />;\n  const products = SliderData();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <div className=\"App\">\n      <Slider {...settings}>\n        {products.map((x, i) => {\n          return (\n            <div key={i} className=\"img-card\">\n              <img className=\"img\" src={x.img} alt=\"\" />\n              <div class=\"card-body\">\n                <div className=\"card-title\">{x.title}</div>\n                <div className=\"card-text\">{x.text}</div>\n                <button className=\"btn\" onClick={togglePopup}>\n                  Read More\n                </button>\n                {isOpen && (\n                  <PopUp\n                    content={\n                      <>\n                        <img className=\"img\" src={x.img} alt=\"\" />\n                        <div className=\"PopUp-Header\">{x.title}</div>\n                        <div className=\"PopUp-Text\">{x.textDetail}</div>\n                      </>\n                    }\n                    handleClose={togglePopup}\n                  />\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </Slider>\n    </div>\n  );\n}\n\nexport default MainSlider;\n"]},"metadata":{},"sourceType":"module"}